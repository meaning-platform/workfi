/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  DeadlineUtils,
  DeadlineUtilsInterface,
} from "../../contracts/DeadlineUtils";

const _abi = [
  {
    inputs: [],
    name: "DateIsInThePast",
    type: "error",
  },
  {
    inputs: [],
    name: "WorkerDeadlineMustBeAfterCreationDate",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nowAsUnixSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dateAsUnixSeconds",
        type: "uint256",
      },
    ],
    name: "getDaysBeforeDate",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "bountyCreationDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nowAsUnixSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "workerDeadline",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "investmentOpportunityPercentage",
        type: "uint256",
      },
    ],
    name: "getDaysBeforeInvestmentOpportunityDeadline",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "bountyCreationDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "workerDeadline",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "investmentOpportunityPercentage",
        type: "uint256",
      },
    ],
    name: "getInvestmentOpportunityDeadline",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "workerDeadline",
        type: "uint256",
      },
    ],
    name: "isWorkerDeadlineExpired",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "bountyCreationDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "workerDeadline",
        type: "uint256",
      },
    ],
    name: "revertIfWorkerDeadlineIsInvalid",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610688610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100615760003560e01c806338d8babe146100665780636d13eebf14610096578063c4a9ddad146100b2578063dc00ece1146100e2578063dd50d07f14610112575b600080fd5b610080600480360381019061007b919061035b565b610142565b60405161008d9190610491565b60405180910390f35b6100b060048036038101906100ab919061035b565b6101a0565b005b6100cc60048036038101906100c79190610397565b6101dd565b6040516100d991906104ac565b60405180910390f35b6100fc60048036038101906100f791906103e6565b6102ae565b6040516101099190610491565b60405180910390f35b61012c60048036038101906101279190610309565b6102d3565b6040516101399190610476565b60405180910390f35b60008282101561017e576040517f08197feb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b62015180838361018e9190610577565b6101989190610546565b905092915050565b8181116101d9576040517f69e90e0000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b60006101e984846101a0565b600084846101f79190610577565b9050600073__$5dc460cc747dc4210092f6da12cdb25a64$__632133e3b983866040518363ffffffff1660e01b81526004016102349291906104c7565b60206040518083038186803b15801561024c57600080fd5b505af4158015610260573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102849190610332565b90506000818361029491906104f0565b905080876102a291906104f0565b93505050509392505050565b6000806102bc8685856101dd565b90506102c88582610142565b915050949350505050565b60004282109050919050565b6000813590506102ee8161063b565b92915050565b6000815190506103038161063b565b92915050565b60006020828403121561031b57600080fd5b6000610329848285016102df565b91505092915050565b60006020828403121561034457600080fd5b6000610352848285016102f4565b91505092915050565b6000806040838503121561036e57600080fd5b600061037c858286016102df565b925050602061038d858286016102df565b9150509250929050565b6000806000606084860312156103ac57600080fd5b60006103ba868287016102df565b93505060206103cb868287016102df565b92505060406103dc868287016102df565b9150509250925092565b600080600080608085870312156103fc57600080fd5b600061040a878288016102df565b945050602061041b878288016102df565b935050604061042c878288016102df565b925050606061043d878288016102df565b91505092959194509250565b610452816105ab565b82525050565b610461816105b7565b82525050565b610470816105d3565b82525050565b600060208201905061048b6000830184610449565b92915050565b60006020820190506104a66000830184610458565b92915050565b60006020820190506104c16000830184610467565b92915050565b60006040820190506104dc6000830185610467565b6104e96020830184610467565b9392505050565b60006104fb826105d3565b9150610506836105d3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561053b5761053a6105dd565b5b828201905092915050565b6000610551826105d3565b915061055c836105d3565b92508261056c5761056b61060c565b5b828204905092915050565b6000610582826105d3565b915061058d836105d3565b9250828210156105a05761059f6105dd565b5b828203905092915050565b60008115159050919050565b60006fffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b610644816105d3565b811461064f57600080fd5b5056fea2646970667358221220e88202f66e72b5bea9a2f6cd17db4e322917bc4bbabe0c2362da5e4915cd00a664736f6c63430008040033";

type DeadlineUtilsConstructorParams =
  | [linkLibraryAddresses: DeadlineUtilsLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeadlineUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class DeadlineUtils__factory extends ContractFactory {
  constructor(...args: DeadlineUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        DeadlineUtils__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: DeadlineUtilsLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$5dc460cc747dc4210092f6da12cdb25a64\\$__", "g"),
      linkLibraryAddresses["contracts/MathUtils.sol:MathUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DeadlineUtils> {
    return super.deploy(overrides || {}) as Promise<DeadlineUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DeadlineUtils {
    return super.attach(address) as DeadlineUtils;
  }
  override connect(signer: Signer): DeadlineUtils__factory {
    return super.connect(signer) as DeadlineUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeadlineUtilsInterface {
    return new utils.Interface(_abi) as DeadlineUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DeadlineUtils {
    return new Contract(address, _abi, signerOrProvider) as DeadlineUtils;
  }
}

export interface DeadlineUtilsLibraryAddresses {
  ["contracts/MathUtils.sol:MathUtils"]: string;
}
